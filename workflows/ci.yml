name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  label-pr:
    name: Label Pull Request
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Label PR based on branch name
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, number } = context.issue;
            const branchName = context.payload.pull_request.head.ref;
            
            let labelsToAdd = [];
            
            if (branchName.startsWith('feature/')) {
              labelsToAdd.push('enhancement');
            } else if (branchName.startsWith('fix/')) {
              labelsToAdd.push('bug');
            } else if (branchName.startsWith('docs/')) {
              labelsToAdd.push('documentation');
            } else if (branchName.startsWith('security/')) {
              labelsToAdd.push('security');
            }
            
            if (labelsToAdd.length > 0) {
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: number,
                labels: labelsToAdd
              });
            }

  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            npm ci
          else
            echo "No package.json found, skipping npm install"
          fi
          
      - name: Run linting
        run: |
          if [ -f package.json ] && grep -q "\"lint\":" package.json; then
            npm run lint
          else
            echo "No lint script found in package.json, skipping linting"
          fi
        continue-on-error: true
        
      - name: Check file formatting
        run: |
          if [ -f .prettierrc ] || [ -f .prettier.config.js ]; then
            npx prettier --check "**/*.{js,jsx,ts,tsx,json,md}" || echo "Formatting issues found"
          else
            echo "No Prettier config found, skipping format check"
          fi
        continue-on-error: true

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Run Dependency Vulnerability Check
        run: |
          if [ -f package.json ]; then
            npm audit --production
          else
            echo "No package.json found, skipping npm audit"
          fi
        continue-on-error: true

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  crypto-specific-checks:
    name: Bitcoin Specific Security Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Check for hardcoded private keys
        run: |
          # Look for potential private key patterns
          ! grep -r --include="*.{js,ts,jsx,tsx,py,md,json}" \
            -E "(5[HJK][1-9A-Za-z][^OIl]{49}|L[1-9A-Za-z][^OIl]{50}|K[1-9A-Za-z][^OIl]{50}|xprv[0-9a-zA-Z]{107})" \
            --exclude-dir={node_modules,.git} .
        continue-on-error: true
        
      - name: Check for bitcoin addresses
        run: |
          # Look for potential Bitcoin addresses that might be hardcoded
          ADDRESSES=$(grep -r --include="*.{js,ts,jsx,tsx,py,md,json}" \
            -E "([13][a-km-zA-HJ-NP-Z1-9]{25,34}|bc1[ac-hj-np-z02-9]{39,59})" \
            --exclude-dir={node_modules,.git} .)
          
          if [ ! -z "$ADDRESSES" ]; then
            echo "Warning: Found potential Bitcoin addresses in code:"
            echo "$ADDRESSES"
            echo "Please verify these are not private addresses or keys."
          fi
        continue-on-error: true

  report:
    name: Create Summary Report
    needs: [quality-check, security-scan, codeql-analysis, crypto-specific-checks]
    if: always()
    runs-on: ubuntu-latest
    
    steps:
      - name: Create Job Summary
        run: |
          echo "# CI Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… CI pipeline completed for ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Results" >> $GITHUB_STEP_SUMMARY
          echo "- Quality Check: ${{ needs.quality-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Security Scan: ${{ needs.security-scan.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- CodeQL Analysis: ${{ needs.codeql-analysis.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Bitcoin Specific Checks: ${{ needs.crypto-specific-checks.result }}" >> $GITHUB_STEP_SUMMARY

